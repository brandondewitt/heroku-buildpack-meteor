#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
METEOR_HOME=$BUILD_DIR/.meteor/local
PATH=$METEOR_HOME/usr/bin:$METEOR_HOME/usr/lib/meteor/bin:$PATH

# Unfortunately heroku buildpacks don't let you pass parameters
# to this script, so if you want to change the version of meteor,
# you'll have to fork and hard-code this.
METEOR_VERSION=0.9.1

fetch_meteor() {
  if [ -f "$METEOR_HOME/usr/bin/meteor" ] ; then
    # Skip if meteor is already fetched
    return
  fi
  
  # Download node from Heroku's S3 mirror of nodejs.org/dist
  status "Downloading and installing node"
  node_url="http://s3pository.heroku.com/node/v$node_version/node-v$node_version-linux-x64.tar.gz"
  curl $node_url -s -o - | tar xzf - -C $build_dir
  
  # Move node (and npm) into ./vendor and make them executable
  mkdir -p $build_dir/vendor
  mv $build_dir/node-v$node_version-linux-x64 $build_dir/vendor/node
  chmod +x $build_dir/vendor/node/bin/*
  PATH=$build_dir/vendor/node/bin:$PATH

  #PACKAGE=meteor_${METEOR_VERSION}-1_amd64.deb
  echo "Installting meteor Package"
  curl https://install.meteor.com/ | sh

  echo "Updating PATH with METEOR"
  PATH=$HOME/.meteor:$PATH

  #echo "Unpacking meteor"
  #[ ! -d "$METEOR_HOME" ] && mkdir -p "$METEOR_HOME"
  #ar p "$CACHE_DIR/$PACKAGE" data.tar.gz | tar -C "$METEOR_HOME" -zxf -
}

build() {
  ( 
    cd $BUILD_DIR
    echo "Building meteor bundle"
    #meteor bundle $CACHE_DIR/bundle.tar.gz 
    #mkdir -p $BUILD_DIR/.meteor/local/build
    #tar -zxf $CACHE_DIR/bundle.tar.gz --strip-components 1 -C $BUILD_DIR/.meteor/local/build
    #rm $CACHE_DIR/bundle.tar.gz
    meteor bundle --debug --directory deploy
    cd deploy 
    echo "Installing npm dependencies"
    npm install
  )
}

[ ! -d $BUILD_DIR ] && mkdir $BUILD_DIR
[ ! -d $CACHE_DIR ] && mkdir $CACHE_DIR

fetch_meteor
build

echo "Checking for post_compile script"
if [ -f $BUILD_DIR/bin/post_compile ] ; then
    echo "-----> Running post_compile hook"
    chmod +x $BUILD_DIR/bin/post_compile
    $BUILD_DIR/bin/post_compile
fi
