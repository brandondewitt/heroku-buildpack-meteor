#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
METEOR_HOME=$BUILD_DIR/.meteor/local
PATH=$METEOR_HOME/usr/bin:$METEOR_HOME/usr/lib/meteor/bin:$PATH

echo "build dir = $BUILD_DIR"
echo "cache dir = $CACHE_DIR"
echo "meteor home = $METEOR_HOME"
echo "path = $PATH"

status() {
  echo "-----> $*"
}

node_version=$(curl --silent --get https://semver.io/node/resolve)

fetch_meteor() {
  #if [ -f "$METEOR_HOME/usr/bin/meteor" ] ; then
    # Skip if meteor is already fetched
    #return
  #fi
  
  # Download node from Heroku's S3 mirror of nodejs.org/dist
  status "Downloading and installing node $node_version"
  NODE_URL="http://s3pository.heroku.com/node/v$node_version/node-v$node_version-linux-x64.tar.gz"
  curl $NODE_URL -s -o - | tar xzf - -C $BUILD_DIR
  
  # Move node (and npm) into ./.vendor and make them executable
  mkdir -p $BUILD_DIR/.vendor
  mv $BUILD_DIR/node-v$node_version-linux-x64 $BUILD_DIR/.vendor/node
  chmod +x $BUILD_DIR/.vendor/node/bin/*
  PATH=$BUILD_DIR/.vendor/node/bin:$PATH

  status "Installing meteor Package"
  curl https://install.meteor.com/ | sh

  status "Updating PATH with METEOR"
  PATH=$HOME/.meteor:$PATH
}

build() {
  ( 
    cd $BUILD_DIR
    status "Building meteor bundle"
    meteor build --directory deploy
    cd deploy/bundle/programs/server
    status "Installing npm dependencies"
    npm install
    mv $BUILD_DIR/.vendor $BUILD_DIR/vendor
  )
}

[ ! -d $BUILD_DIR ] && mkdir $BUILD_DIR
[ ! -d $CACHE_DIR ] && mkdir $CACHE_DIR

fetch_meteor
build

status "Checking for post_compile script"
if [ -f $BUILD_DIR/bin/post_compile ] ; then
    status "Running post_compile hook"
    chmod +x $BUILD_DIR/bin/post_compile
    $BUILD_DIR/bin/post_compile
fi
